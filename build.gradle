// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    apply from: "${rootDir}/versions.gradle"
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        //noinspection GradleDependency
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.appswithlove.loco:loco:$localize_version"
        classpath "com.netflix.nebula:gradle-lint-plugin:$netflix_gradle_lint_version"
    }
}

allprojects {
    apply from: "${rootDir}/versions.gradle"
    apply plugin: 'nebula.lint'
    gradleLint.rules += 'unused-dependency'
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
}

gradle.projectsEvaluated {
    subprojects {
        setupLoco(project)
        applyAndroidConfig(project)
        updateLocoFiles(project)
    }
}

def updateLocoFiles(Project project) {
    if (plugins.hasPlugin('com.appswithlove.loco')) {
        project.preBuild.dependsOn updateLoco
    }
}

def setupLoco(Project project) {
    if (project.hasProperty('Loco')) {
        project.Loco {
            apiKey = 'SmoB_w_aj6tvSAbF4RZVoiXMTBQ5ZHhh'
            lang = ['ru', 'en', 'uk']
            defLang = 'uk'
            resDir = "$project.projectDir/src/main/res"
            tags = "$project.name"
        }
    }
}

def applyAndroidConfig(Project project) {
    if (project.hasProperty('android')) {
        project.android.kotlinOptions {
            jvmTarget = project_jvm_target
        }
        project.android.defaultConfig.javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental": "true"]
            }
        }
        if(plugins.hasPlugin('kotlin-kapt')){
            kapt.correctErrorTypes true
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
